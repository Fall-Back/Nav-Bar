/*
    Colour contrast from https://gist.github.com/FStop/8959422
    
    Usage:
    @if color_contrast($colour, #fff) < 2 {
        color: #333;
    }
    @else{
        color: #fff;
    }
*/
/* Awesome contrast ratio function
* via https://gist.github.com/voxpelli/6304812
**/
/*------------------------------------------------------------------------------------------------*    Fall-Back Icons v1.0.0
    
    Designed for use with the basic [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)
    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+
    
\*------------------------------------------------------------------------------------------------*/
/*


    <!-- At the top of each page: -->
    <svg xmlns="http://www.w3.org/2000/svg" display="none">
        <symbol id="icon-triangle-down" viewBox="0 0 12 16">
            <path d="M1,6h10l-5,5L1,6z"></path>
        </symbol>
        <symbol id="icon-cross" viewBox="0 0 16 16">
            <path d="M15.5,2L14,0.5l-6,6l-6-6L0.5,2l6,6l-6,6L2,15.5l6-6l6,6l1.5-1.5l-6-6L15.5,2z"></path>
        </symbol>
        <symbol id="icon-menu" viewBox="0 0 16 16">
            <rect x="0" width="16" height="3"/>
            <rect x="0" y="6" width="16" height="3"/>
            <rect y="12" width="16" height="3"/>
        </symbol>
        <!-- Other <symbol>s... -->
    </svg>
    
    
    <!-- Where it's needed: -->
    <svg width="0" height="0" class="icon  icon--narrow" aria-label="About Us Submenu"><use xlink:href="#icon-triangle-down"></use></svg>
    <!-- Note the aria-label can be removed if equivelent text is already present or the icon is visual only -->

*/
/*
    1. Override display attribute.
*/
.icon {
  display: inline;
  /* [1] */
  fill: currentColor;
  width: 1.14285714286em;
  height: 1.14285714286em;
  /*width: 1.71428571429em;
    height: 1.71428571429em;*/
  /* No idea why, exactly, but this seems to be the best position, we long as we ... */
  /* ... prevent the icon affecting line-height: */
  /*
    -webkit-transform: scale(0.666);
    -moz-transform: scale(0.666);
    -ms-transform: scale(0.666);
    transform: scale(0.666);*/ }

.icon--narrow {
  /*margin: -0.5em -0.25em;*/
  width: 0.85714285714em; }

_:-o-prefocus, :root .icon {
  vertical-align: middle; }

/*
.icon symbol {
    width: 1.14285714286em;
    height: 1.14285714286em;
}*/
/*
    No transform support for Opera Mini, so hack it back to 16px with ems.
    Note, since Opera Mini doesn't support line-height, it will be vertically centered anyway.
    1. Hack also affects Opera 12 which is supported by the Original Mustard Cut, so turning off
       transform for this. Slight difference in position acceptable (lower).
*/
/*
_:-o-prefocus, :root .icon {
    width: 1.14285714286em;
    height: 1.14285714286em;
    transform: none; /* [1] *
}*/
.icon-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }

/*------------------------------------------------------------------------------------------------*    Fall-Back Nav Bar Pattern v1.0.0

    Designed for use with the basic [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)
    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+

    Any double-classing (e.g. `.class.class`) is deliberatly in place in order to increase specifity.
    This allows Start-CSS declarations to be overidden.
    E.g. `.{pattern}__open.{pattren}__open` overrides `a[href]`.

    
    Problem with close label
    
\*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*    Import Fall-Back vars:

    Slightly hacky way of allowing the main UI colour of this pattern to be:
     - base-ui colour (if set)
     - otherwise #999
     - but can be specifically overridden
\*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/
/* -- Basic/fallback layout --------------------------------------------------------------------- */
/* -- .nav-bar -------------------------------------------------------------------------------*/
.nav-bar {
  background-color: #663399; }

/* Not sure why I need float clearing here. Keep for reference. */
/*.nav-bar::before,
    .nav-bar::after,
    .nav-bar .nav-bar__inner::before,
    .nav-bar .nav-bar__inner::after {
        content: " ";
        display: table;
    }

    .nav-bar::after,
    .nav-bar .nav-bar__inner::after {
        clear: both;
    }*/
/* -------------------------------------------------------------------------------------------*/
/* -- .nav-bar__title-section ----------------------------------------------------------------*/
/*
        1. For IE 9 and FF 21-.
    */
.nav-bar .nav-bar__title-section {
  white-space: nowrap;
  /* [1] */
  vertical-align: top;
  /* [1] */
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  /*display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;*/
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  /*-webkit-box-pack: justify;
           -ms-flex-pack: justify;
         justify-content: space-between;*/ }

/*
            1. For IE 9 and FF 21-.
        */
.nav-bar .nav-bar__title-text {
  vertical-align: top;
  /* [1] */
  background: #663399;
  display: inline-block;
  height: 1.7142857em;
  line-height: 1.7142857em;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: bold;
  font-style: normal;
  font-size: 1.5em; }

.nav-bar .nav-bar__title-text .nav-bar__link {
  height: 1.7142857em;
  line-height: 1.7142857em; }

@media only screen and (max-width: 50em) {
  /*
            Apply the table-cell hack to IE9.
        */
  _::selection, .nav-bar__title-section > * {
    display: table-cell\0  !important;
    width: 1px\0; }
  _::selection, .nav-bar__title-section > div {
    display: table-cell\0  !important;
    width: 100%\0;
    text-align: center; }
  /*
            Without flexbox positioning doesn't sort itself out, so use text-align to position
            the title.
        */
  /* If there's no control to the left: */
  _::selection, .nav-bar__title-section > div:first-child {
    text-align: left; }
  /* If there's no control to the right */
  _::selection, .nav-bar__title-section > div:last-child {
    text-align: right; }
  /*
            Apply hacks for old FF.
        */
  _:-moz-tree-row(hover), .nav-bar__title-section {
    display: -moz-box;
    -moz-box-pack: justify;
    width: 100%;
    text-align: center; }
  _:-moz-tree-row(hover), .nav-bar__title-section > div {
    -moz-box-flex: 1; } }

/* -- .nav-bar__inner ------------------------------------------------------------------------*/
/*
        1. Duplicating parent background-color here. There HAS to be a colour here for the pattern
           to work, the parent background-color is there to allow things to be NOT BROKEN on
           browsers that don't support HTML semantic elements.
    */
.nav-bar .nav-bar__inner {
  background-color: #663399;
  overflow: hidden; }

/* -------------------------------------------------------------------------------------------*/
/* -- .nav-bar__button -----------------------------------------------------------------------*/
/* Unused? */
/*.nav-bar__button {
        -webkit-appearance: none;
        border-radius: 0;
        margin: 0;
        padding: 0;
        background: #ddd;
        border: none;
        @include fallback-rem(height, $fallback--nav-bar--height);
    }

    .nav-bar__button:hover,
    .nav-bar__button:active,
    .nav-bar__button:focus {
        background-color: #ccc;  /* @var *
    }
    */
/* -------------------------------------------------------------------------------------------*/
/* -- .nav-bar__items -------------------------------------------------------------------------*/
.nav-bar .nav-bar__items {
  list-style-type: none;
  padding: 0;
  margin: 0;
  float: left;
  -webkit-box-flex: 0;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto; }

.nav-bar .nav-bar__item {
  margin: 0; }

/*.nav-bar .nav-bar__item:not(:first-child) {
            border-style: $fallback--nav-bar__link--border-style;
            border-color: $fallback--nav-bar__link--border-color;
            border-left-width: $fallback--nav-bar__link--border-width;
        }

        .nav-bar .nav-bar__item:last-child {
            border-right-width: $fallback--nav-bar__link--border-width;
        }*/
/* -------------------------------------------------------------------------------------------*/
/* -- .subnav --------------------------------------------------------------------------------*/
.nav-bar .subnav {
  list-style-type: none;
  padding: 0;
  margin: 0 0.3214286em 0 1.2857143em;
  background-color: #331a4d;
  min-height: 2.5714286em; }

.nav-bar .subnav::before,
.nav-bar .subnav::after {
  content: " ";
  display: table; }

.nav-bar .subnav::after {
  clear: both; }

.nav-bar .subnav__item {
  margin: 0;
  float: left; }

/* -------------------------------------------------------------------------------------------*/
/* -- .nav-bar__link, .subnav__link ----------------------------------------------------------*/
.nav-bar .nav-bar__link,
.nav-bar .subnav__link,
.nav-bar .subnav__heading {
  display: block;
  margin: 0;
  padding: 0.4285713em 0.6428571em;
  border: 0; }

.nav-bar .nav-bar__link:hover,
.nav-bar .nav-bar__link:active,
.nav-bar .nav-bar__link:focus,
.nav-bar .subnav__link:hover,
.nav-bar .subnav__link:active,
.nav-bar .subnav__link:focus {
  border: 0; }

.nav-bar__title-text .nav-bar__link {
  padding-top: 0;
  padding-bottom: 0; }

/*
        Fix for Opera Mini vertical centering:
        (affects Opera 12.10-16 as well)
    */
_:-o-prefocus, body:last-child .nav-bar .nav-bar__link,
_:-o-prefocus, body:last-child .nav-bar .subnav__link,
_:-o-prefocus, body:last-child .nav-bar .subnav__heading {
  line-height: 1.71428571429 !important; }

.nav-bar .nav-bar__link {
  color: #fff;
  background-color: #663399; }

.nav-bar .nav-bar__link .icon {
  display: none; }

.nav-bar .subnav__heading {
  color: #fff; }

.nav-bar .subnav__link {
  display: inline-block;
  color: #fff;
  background-color: #331a4d; }

/*
        Don't allow the usual interaction effects on ALL nav-bar links:
        (this is to allow submenu heading links to appear as a non-link)
    */
.nav-bar .nav-bar__link:hover,
.nav-bar .nav-bar__link:focus,
.nav-bar .nav-bar__link:active,
.nav-bar .subnav__link:hover,
.nav-bar .subnav__link:focus,
.nav-bar .subnav__link:active {
  text-decoration: none;
  outline: 0; }

/*
        Provide interaction effects for nav-bar links that ARE links:
        (this excludes submenu heading links - note that submenu links should never also be
        submenu heading links)
    */
.nav-bar .nav-bar__link:hover,
.nav-bar .nav-bar__link:focus,
.nav-bar .nav-bar__link:active {
  color: #fff;
  background-color: #4d2673; }

.nav-bar .subnav__link:hover,
.nav-bar .subnav__link:focus,
.nav-bar .subnav__link:active {
  color: #fff;
  background-color: #4d2673; }

/*.nav-bar [href$="#"].nav-bar__link {
        /* Override link hover effect - we want this to not look like a link in basic mode: *
        background-color: transparent;
        cursor: default;
    }*/
/*.nav-bar .subnav__heading + .subnav__open {
        display: none;
    }*/
/*.nav-bar .subnav__open::before {
        content: attr(data-content);
        display: inline-block;
    }*/
.nav-bar .subnav__cancel,
.nav-bar .subnav__open {
  display: none; }

/* -----------------------------------------------------------------------------------------------*/
/* -- Enhanced layout --------------------------------------------------------------------------- */
@media only screen and (min-width: 50em) {
  /*
        */
  .nav-bar {
    position: relative;
    z-index: 1000;
    /* @var */
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
  /*
            Set flex-grow for immediate children to help with things like top-bar combinations
            (search form won't grow otherwise).
        */
  .nav-bar > * {
    -webkit-flex: 1 0 auto;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto; }
  .nav-bar .nav-bar__title-section {
    -webkit-flex: 0 0 auto;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto; }
  /*.nav-bar .nav-bar__inner {
            -webkit-flex: 1 0 auto;
                -ms-flex: 1 0 auto;
                    flex: 1 0 auto;
        }*/
  /*
            Apply table-cell hack to all FF because -moz-box in FF12- doesn't honour
            `position:relative` and applying the table-cell hack to everything causes other
            problems.
        */
  _:-moz-tree-row(hover), .nav-bar > * {
    display: table-cell;
    width: 100%; }
  _:-moz-tree-row(hover), .nav-bar .nav-bar__title-section {
    display: table-cell;
    width: 1px; }
  /*
            Apply the table-cell hack to IE9.
        */
  _::selection, .nav-bar > * {
    display: table-cell\0;
    width: 100%\0; }
  _::selection, .nav-bar .nav-bar__title-section {
    display: table-cell\0;
    width: 1px\0; }
  /*
            Remove table hack properties for browsers that support flexbox AND @supports.
            Note, we're only interested in FF here, as other browsers already have flexbox properties
            applied if they support it, so in this case the following is only relevent for FF22+
            (below that FF will still use the table hack as applied above).
        */
  @supports (display: flex) {
    .nav-bar > *,
    .nav-bar .nav-bar__title-section {
      display: block;
      width: auto; } }
  /*
            Add dividers.
            Dividers created by adding right borders to nav-bar__items.
        */
  .nav-bar .nav-bar__item {
    border-style: solid;
    border-color: rgba(0, 0, 0, 0.2);
    border-top-width: 0;
    border-bottom-width: 0;
    border-left-width: 0;
    border-right-width: 1px; }
  /*
            If there's a title section, add a left border to the first item too.
        */
  .nav-bar .nav-bar__title-section + * .nav-bar__item:first-child {
    border-left-width: 1px; }
  /**/
  .nav-bar .nav-bar__item {
    float: left; }
  .nav-bar .nav-bar__link .icon {
    display: inline; }
  .nav-bar .has-subnav > .nav-bar__link {
    float: left; }
  /*
            Allow interaction effects for ALL nav-bar links now we're wide enough to show the nav-bar
            enhanced version.
        */
  .nav-bar .nav-bar__link:hover,
  .nav-bar .nav-bar__link:focus,
  .nav-bar .nav-bar__link:active,
  .nav-bar .nav-bar__subnav-control:focus + label,
  .nav-bar .nav-bar__subnav-control:checked + label {
    background-color: #4d2673;
    cursor: pointer; }
  .nav-bar .subnav {
    position: absolute;
    /*display: none;/**/
    visibility: hidden;
    left: 0;
    right: 0;
    top: 0;
    z-index: -1;
    padding: 0;
    margin: 0;
    padding: 0;
    height: 2.5714286em;
    -webkit-transition: margin-top 0.5s ease, visibility 0s   ease 0.5s;
    -moz-transition: margin-top 0.5s ease, visibility 0s   ease 0.5s;
    -o-transition: margin-top 0.5s ease, visibility 0s   ease 0.5s;
    transition: margin-top 0.5s ease, visibility 0s   ease 0.5s; }
  .nav-bar .nav-bar__subnav-control:checked ~ .subnav {
    visibility: visible;
    margin-top: 2.5714286em;
    -webkit-transition: margin-top 0.5s ease;
    -moz-transition: margin-top 0.5s ease;
    -o-transition: margin-top 0.5s ease;
    transition: margin-top 0.5s ease; }
  .nav-bar .subnav__heading {
    display: none; }
  .nav-bar .subnav__link {
    white-space: nowrap;
    /*OLD-webkit-transition: margin-top 0.5s ease;
               -moz-transition: margin-top 0.5s ease;
                 -o-transition: margin-top 0.5s ease;
                    transition: margin-top 0.5s ease;*/ }
  .nav-bar .subnav__open {
    display: block; }
  .nav-bar .subnav__open::before {
    content: attr(data-content);
    display: inline-block; }
  .nav-bar .subnav__open-message {
    display: inline; }
  .nav-bar .subnav__opened-message {
    display: none; }
  .nav-bar .nav-bar__subnav-control:checked + label .subnav__open-message {
    display: none; }
  .nav-bar .nav-bar__subnav-control:checked + label .subnav__opened-message {
    display: inline; }
  /*.nav-bar .subnav__open:focus + .subnav .subnav__link,
        .nav-bar .subnav__link:focus {
            margin-top: $fallback--nav-bar--height;
        }*/
  /*
            Fixes cancel button behaviour if not using overflow:hidden on .nav-bar__inner
            (Maybe be temp - I can't quite remember what the overflow:hidden was for.
            May have been a float-clearing thing but may not need this now?)
        */
  /*.nav-bar .subnav__cancel:focus,
        .nav-bar .subnav__cancel:active {
            margin-top: 0;
        }*/
  /*.nav-bar .subnav__item {
            float: none;
            display: table-cell;
        }*/
  .nav-bar .subnav__cancel {
    display: block;
    float: right; }
  /*
            1. Make background transparent so transition looks smoother.
        */
  /**/
  /*.nav-bar .subnav__cancel:focus {
            margin-top: 0;
        }*/
  /*.nav-bar .subnav__open:focus ~ .subnav__cancel {
            margin-top: $fallback--nav-bar--height;
        }*/
  /* @micropattern:pseudo-dataicon-middle */
  /*
        .nav-bar .subnav__open::after,
        .nav-bar .subnav__cancel::after {
            /* These styles are enough for modern FF to V-center the icon: *
            display: inline-block;
            vertical-align: middle;

            //width: 12px;

            /* IE10-11 flexbox chokes without width: *
            //@include fallback-rem(width, ($fallback--nav-bar--height / 2 ));
            /* IE11 flexbox stretches icon without height: *
            //@include fallback-rem(height, ($fallback--nav-bar--height / 2 ));
            /* But now blink pushes the icon to the bottom without line-height: 0. *
            line-height: 0;
        }
        */
  /*
        .nav-bar .subnav__open::after {
            width: $fallback--nav-bar___open--size;
        }

        .nav-bar .subnav__cancel::after {
            width: $fallback--nav-bar___cancel--size;
        }

        .nav-bar .subnav__open::after {
            content: url($fallback--nav-bar__open--svg);
        }

        .nav-bar .subnav__cancel::after {
            content: url($fallback--nav-bar__cancel--svg);
        }
        */
  /*.nav-bar .subnav__open--fake::after {
            margin-left: $fallback--nav-bar--spacing * 2;
        }*/
  /*.subnav__open svg,
        .subnav__cancel svg {
            vertical-align: text-bottom;
        }*/ }

/* IE9 hacks: */
/*
    */
@media all and (min-width: 0\0) and (min-resolution: 0.001dpcm) {
  /*
            The icons force a massive height increase for some reason.
            Setting the height to this only works fine because on 'wide' the nav-bar can't be
            allowed to be double-lined or it breaks, and on 'narrow' the icons are hidden.
        */
  .nav-bar .subnav__open,
  .nav-bar .subnav__cancel {
    height: 2.5714286em; }
  .nav-bar .subnav__open::after {
    /* Increase icon width due to odd cropping, then rescale down: */
    width: 1rem;
    -ms-transform: scale(0.5); }
  .nav-bar .subnav__cancel::after {
    /* Increase icon width due to odd cropping, then rescale down: */
    width: 1.1rem;
    -ms-transform: scale(0.8); } }

/* -----------------------------------------------------------------------------------------------*/
/* ---------------------------------------------------------------------------------------------- */
/* -- Fit layout -------------------------------------------------------------------------------- */
@media only screen and (min-width: 50em) {
  .nav-bar--fit .nav-bar__items {
    width: 100%;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: space-around;
    -ms-flex-pack: distribute;
    justify-content: space-around; }
  .nav-bar--fit .nav-bar__item {
    -webkit-flex: 0 0 auto;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    text-align: center;
    border: 0; }
  .nav-bar--fit .has-subnav {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; } }

/* -----------------------------------------------------------------------------------------------*/
/*
    These classes help control the layout in the nav-bar__title-section.

    There are different ways to achieve these layouts with pros and cons to each.
    There are also differences in possible behaviours so there's no right/wrong way.
    E.g. A title section and a single menu opener control could be laid out with either the title
    seciton centered in the width of the whole nav-bar, or centered in the remaining space
    available after decducting the width of the control:

       |-----TITLE-----| (no control)
    A: |-----TITLE---|=| (control does not affect centering)
    B: |----TITLE----|=| (control affects centering)

    B can be acheived easily with flexbox, as can other layouts, which basically govern themselves
    based on which elements are in place:

    DEFAULT (no class):

    |TITLE----------| (no control elements)
    |=|--------TITLE| (control element before title)
    |TITLE--------|=| (control element after title)
    |=|---TITLE---|=| (two control elements)

    RELATIVELY CENTERED (centered on remaining space)

    .nav-bar__title-section--relatively-centered {
        margin: 0 auto;
    }

*/
.nav-bar__title-section--relatively-centered {
  margin: 0 auto; }
